import React, { useState, useEffect, Component, useRef } from "react";
import ReactDOM from "react-dom";

const ErrorBoundary: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  class Boundary extends Component<{ children: React.ReactNode }, { hasError: boolean }> {
    constructor(props: any) {
      super(props);
      this.state = { hasError: false };
    }
    static getDerivedStateFromError() {
      return { hasError: true };
    }
    componentDidCatch(error: any, info: any) {
      console.error("Error caught by boundary:", error, info);
    }
    render() {
      if (this.state.hasError) {
        return <h2 className="text-red-600">‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶≠‡ßÅ‡¶≤ ‡¶π‡ßü‡ßá‡¶õ‡ßá!</h2>;
      }
      return this.props.children;
    }
  }
  return <Boundary>{children}</Boundary>;
};

// ‚úÖ Custom Hook (useFetch)
const useFetch = (url: string) => {
  const [data, setData] = useState<any>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch(url)
      .then((res) => res.json())
      .then((d) => {
        setData(d);
        setLoading(false);
      });
  }, [url]);

  return { data, loading };
};

// ‚úÖ Portal Component (Modal)
const Modal: React.FC<{ onClose: () => void }> = ({ onClose, children }) => {
  return ReactDOM.createPortal(
    <div className="fixed inset-0 flex items-center justify-center bg-black/50">
      <div className="bg-white p-6 rounded-xl shadow-lg">
        {children}
        <button onClick={onClose} className="mt-4 px-3 py-1 bg-red-500 text-white rounded">
          Close
        </button>
      </div>
    </div>,
    document.body
  );
};

const Module13 = () => {
  const { data, loading } = useFetch("https://jsonplaceholder.typicode.com/posts/1");
  const [showModal, setShowModal] = useState(false);

  return (
    <div className="p-6 space-y-6">
      <h1 className="text-2xl font-bold">üìå Module 13: Real-world Features</h1>

      {/* Error Boundaries */}
      <section className="p-4 border rounded-xl bg-gray-50">
        <h2 className="text-xl font-semibold">üîπ Error Boundaries</h2>
        <p>React ‡¶è <b>Error Boundary</b> ‡¶ï‡¶Æ‡ßç‡¶™‡ßã‡¶®‡ßá‡¶®‡ßç‡¶ü ‡¶∞‡¶æ‡¶®‡¶ü‡¶æ‡¶á‡¶Æ error ‡¶ß‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá ‡¶è‡¶¨‡¶Ç UI ‡¶≠‡ßá‡¶ô‡ßá ‡¶Ø‡¶æ‡¶ì‡ßü‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶æ‡¶Å‡¶ö‡¶æ‡ßü‡•§</p>
        <ErrorBoundary>
          <BrokenComponent />
        </ErrorBoundary>
      </section>

      {/* Custom Hook */}
      <section className="p-4 border rounded-xl bg-gray-50">
        <h2 className="text-xl font-semibold">üîπ Custom Hook (useFetch)</h2>
        {loading ? <p>Loading...</p> : <p>{data?.title}</p>}
      </section>

      {/* Portal */}
      <section className="p-4 border rounded-xl bg-gray-50">
        <h2 className="text-xl font-semibold">üîπ Portal (Modal)</h2>
        <button
          onClick={() => setShowModal(true)}
          className="px-3 py-2 bg-blue-600 text-white rounded"
        >
          Show Modal
        </button>
        {showModal && (
          <Modal onClose={() => setShowModal(false)}>
            <h3 className="text-lg font-semibold">‡¶Ü‡¶Æ‡¶ø Portal ‡¶¶‡¶ø‡ßü‡ßá ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã Modal üöÄ</h3>
          </Modal>
        )}
      </section>

      {/* Fragments & Strict Mode */}
      <section className="p-4 border rounded-xl bg-gray-50">
        <h2 className="text-xl font-semibold">üîπ Fragments & Strict Mode</h2>
        <p>
          <b>Fragments</b> ‚Üí DOM ‡¶è extra div ‡¶®‡¶æ ‡¶¨‡¶æ‡¶®‡¶ø‡ßü‡ßá ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï element wrap ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶π‡ßü‡•§ <br />
          <b>StrictMode</b> ‚Üí React development mode ‡¶è extra checks ‡¶ï‡¶∞‡ßá‡•§
        </p>
        <>
          <p>‡¶è‡¶á ‡¶≤‡¶æ‡¶á‡¶® ‡¶´‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ó‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶¶‡¶ø‡ßü‡ßá wrap ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§</p>
          <p>DOM ‡¶è ‡¶¨‡¶æ‡ßú‡¶§‡¶ø div ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡ßü‡¶®‡¶ø‡•§</p>
        </>
      </section>

      {/* React 19 Features */}
      <section className="p-4 border rounded-xl bg-gray-50">
        <h2 className="text-xl font-semibold">üîπ React 19 Features</h2>
        <ul className="list-disc pl-6">
          <li><b>Actions API</b> ‚Äì form submissions ‡¶∏‡¶π‡¶ú‡ßá handle ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§</li>
          <li><b>New Hooks</b> ‚Äì useOptimistic, useFormStatus ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø‡•§</li>
          <li><b>Server Components</b> ‚Äì server side rendering ‡¶Ü‡¶∞‡¶ì efficient‡•§</li>
        </ul>
      </section>

      {/* Interview Q&A */}
      <section className="p-4 border rounded-xl bg-yellow-50">
        <h2 className="text-xl font-semibold">üéØ Interview Q&A</h2>

        <p><b>Q:</b> Error Boundary ‡¶ï‡ßá‡¶® ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞?</p>
        <p><b>A:</b> Runtime error ‡¶è UI ‡¶ï‡ßç‡¶∞‡¶æ‡¶∂ ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá graceful fallback ‡¶¶‡ßá‡ßü‡•§</p>

        <p><b>Q:</b> Portal ‡¶è‡¶∞ use case ‡¶ï‡ßÄ?</p>
        <p><b>A:</b> Modal, Tooltip, Dropdown ‚Üí ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá DOM tree ‡¶è‡¶∞ ‡¶¨‡¶æ‡¶á‡¶∞‡ßá render ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡ßü‡•§</p>

        <p><b>Q:</b> Custom Hook ‡¶ï‡¶¨‡ßá ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶π‡ßü?</p>
        <p><b>A:</b> ‡¶Ø‡¶ñ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø logic ‡¶¨‡¶æ‡¶∞‡¶¨‡¶æ‡¶∞ reuse ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§</p>

        <p><b>Q:</b> React Fragment ‡¶è‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ ‡¶ï‡ßÄ?</p>
        <p><b>A:</b> DOM ‡¶è extra wrapper ‡¶®‡¶æ ‡¶¨‡¶æ‡¶®‡¶ø‡ßü‡ßá multiple element group ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§</p>

        <p><b>Q:</b> React 19 ‡¶è‡¶∞ ‡¶®‡¶§‡ßÅ‡¶® features ‡¶ï‡ßÄ ‡¶ï‡ßÄ?</p>
        <p><b>A:</b> Actions API, ‡¶®‡¶§‡ßÅ‡¶® hooks (useOptimistic), improved Server Components‡•§</p>
      </section>
    </div>
  );
};

// Dummy Broken Component to test ErrorBoundary
const BrokenComponent = () => {
  throw new Error("‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ó‡¶£‡ßç‡¶°‡¶ó‡ßã‡¶≤ ‡¶π‡ßü‡ßá‡¶õ‡ßá!");
};

export default Module13;
